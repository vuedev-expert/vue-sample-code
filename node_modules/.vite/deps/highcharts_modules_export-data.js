import {
  __commonJS
} from "./chunk-XHWLKIPX.js";

// node_modules/highcharts/modules/export-data.js
var require_export_data = __commonJS({
  "node_modules/highcharts/modules/export-data.js"(exports, module) {
    (function(a) {
      "object" === typeof module && module.exports ? (a["default"] = a, module.exports = a) : "function" === typeof define && define.amd ? define("highcharts/modules/export-data", ["highcharts", "highcharts/modules/exporting"], function(p) {
        a(p);
        a.Highcharts = p;
        return a;
      }) : a("undefined" !== typeof Highcharts ? Highcharts : void 0);
    })(function(a) {
      function p(a2, f, c, y) {
        a2.hasOwnProperty(f) || (a2[f] = y.apply(null, c), "function" === typeof CustomEvent && window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: f, module: a2[f] } })));
      }
      a = a ? a._modules : {};
      p(a, "Extensions/ExportData/ExportDataDefaults.js", [], function() {
        "";
        return { exporting: { csv: { annotations: { itemDelimiter: "; ", join: false }, columnHeaderFormatter: null, dateFormat: "%Y-%m-%d %H:%M:%S", decimalPoint: null, itemDelimiter: null, lineDelimiter: "\n" }, showTable: false, useMultiLevelHeaders: true, useRowspanHeaders: true }, lang: {
          downloadCSV: "Download CSV",
          downloadXLS: "Download XLS",
          exportData: { annotationHeader: "Annotations", categoryHeader: "Category", categoryDatetimeHeader: "DateTime" },
          viewData: "View data table",
          hideData: "Hide data table"
        } };
      });
      p(a, "Extensions/DownloadURL.js", [a["Core/Globals.js"]], function(a2) {
        var f = a2.isSafari, c = a2.win, y = c.document, p2 = c.URL || c.webkitURL || c, D = a2.dataURLtoBlob = function(a3) {
          if ((a3 = a3.replace(/filename=.*;/, "").match(/data:([^;]*)(;base64)?,([0-9A-Za-z+/]+)/)) && 3 < a3.length && c.atob && c.ArrayBuffer && c.Uint8Array && c.Blob && p2.createObjectURL) {
            var m = c.atob(a3[3]), v = new c.ArrayBuffer(m.length);
            v = new c.Uint8Array(v);
            for (var q = 0; q < v.length; ++q)
              v[q] = m.charCodeAt(q);
            a3 = new c.Blob([v], { type: a3[1] });
            return p2.createObjectURL(a3);
          }
        };
        a2 = a2.downloadURL = function(a3, p3) {
          var v = c.navigator, q = y.createElement("a");
          if ("string" === typeof a3 || a3 instanceof String || !v.msSaveOrOpenBlob) {
            a3 = "".concat(a3);
            v = /Edge\/\d+/.test(v.userAgent);
            if (f && "string" === typeof a3 && 0 === a3.indexOf("data:application/pdf") || v || 2e6 < a3.length) {
              if (a3 = D(a3) || "", !a3)
                throw Error("Failed to convert to blob");
            }
            if ("undefined" !== typeof q.download)
              q.href = a3, q.download = p3, y.body.appendChild(q), q.click(), y.body.removeChild(q);
            else
              try {
                var m = c.open(a3, "chart");
                if ("undefined" === typeof m || null === m)
                  throw Error("Failed to open window");
              } catch (Q) {
                c.location.href = a3;
              }
          } else
            v.msSaveOrOpenBlob(a3, p3);
        };
        return { dataURLtoBlob: D, downloadURL: a2 };
      });
      p(a, "Extensions/ExportData/ExportData.js", [a["Core/Renderer/HTML/AST.js"], a["Extensions/ExportData/ExportDataDefaults.js"], a["Core/Globals.js"], a["Core/Defaults.js"], a["Extensions/DownloadURL.js"], a["Core/Series/SeriesRegistry.js"], a["Core/Utilities.js"]], function(a2, p2, c, y, W, P, m) {
        function f() {
          var b = this.getCSV(true);
          R(S(b, "text/csv") || "data:text/csv,\uFEFF" + encodeURIComponent(b), this.getFilename() + ".csv");
        }
        function v() {
          var b = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>Ark1</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><style>td{border:none;font-family: Calibri, sans-serif;} .number{mso-number-format:"0.00";} .text{ mso-number-format:"@";}</style><meta name=ProgId content=Excel.Sheet><meta charset=UTF-8></head><body>' + this.getTable(true) + "</body></html>";
          R(S(b, "application/vnd.ms-excel") || "data:application/vnd.ms-excel;base64," + z.btoa(unescape(encodeURIComponent(b))), this.getFilename() + ".xls");
        }
        function q(b) {
          var a3 = "", g = this.getDataRows(), e = this.options.exporting.csv, x = A(e.decimalPoint, "," !== e.itemDelimiter && b ? 1.1 .toLocaleString()[1] : "."), d = A(e.itemDelimiter, "," === x ? ";" : ","), c2 = e.lineDelimiter;
          g.forEach(function(b2, e2) {
            for (var u, n = b2.length; n--; )
              u = b2[n], "string" === typeof u && (u = '"' + u + '"'), "number" === typeof u && "." !== x && (u = u.toString().replace(".", x)), b2[n] = u;
            b2.length = g.length ? g[0].length : 0;
            a3 += b2.join(d);
            e2 < g.length - 1 && (a3 += c2);
          });
          return a3;
        }
        function D(b) {
          var a3 = this.hasParallelCoordinates, g = this.time, e = this.options.exporting && this.options.exporting.csv || {}, c2 = this.xAxis, d = {}, n = [], p3 = [], K = [], t = this.options.lang.exportData, h2 = t.categoryHeader, m2 = t.categoryDatetimeHeader, v2 = function(a4, d2, g2) {
            if (e.columnHeaderFormatter) {
              var l = e.columnHeaderFormatter(a4, d2, g2);
              if (false !== l)
                return l;
            }
            return a4 ? a4 instanceof X ? b ? { columnTitle: 1 < g2 ? d2 : a4.name, topLevelColumnTitle: a4.name } : a4.name + (1 < g2 ? " (" + d2 + ")" : "") : a4.options.title && a4.options.title.text || (a4.dateTime ? m2 : h2) : h2;
          }, T = function(a4, b2, d2) {
            var g2 = {}, l = {};
            b2.forEach(function(b3) {
              var e2 = (a4.keyToAxis && a4.keyToAxis[b3] || b3) + "Axis";
              e2 = Y(d2) ? a4.chart[e2][d2] : a4[e2];
              g2[b3] = e2 && e2.categories || [];
              l[b3] = e2 && e2.dateTime;
            });
            return { categoryMap: g2, dateTimeValueAxisMap: l };
          }, Z = function(a4, b2) {
            return a4.data.filter(function(a5) {
              return "undefined" !== typeof a5.y && a5.name;
            }).length && b2 && !b2.categories && !a4.keyToAxis ? a4.pointArrayMap && a4.pointArrayMap.filter(function(a5) {
              return "x" === a5;
            }).length ? (a4.pointArrayMap.unshift("x"), a4.pointArrayMap) : ["x", "y"] : a4.pointArrayMap || ["y"];
          }, q2 = [], w, B = 0;
          this.series.forEach(function(l) {
            var u = l.xAxis, x = l.options.keys || Z(l, u), n2 = x.length, k2 = !l.requireSorting && {}, t2 = c2.indexOf(u), h3 = T(l, x), f3;
            if (false !== l.options.includeInDataExport && !l.options.isInternal && false !== l.visible) {
              aa(q2, function(a4) {
                return a4[0] === t2;
              }) || q2.push([t2, B]);
              for (f3 = 0; f3 < n2; )
                w = v2(l, x[f3], x.length), K.push(w.columnTitle || w), b && p3.push(w.topLevelColumnTitle || w), f3++;
              var m3 = {
                chart: l.chart,
                autoIncrement: l.autoIncrement,
                options: l.options,
                pointArrayMap: l.pointArrayMap,
                index: l.index
              };
              l.options.data.forEach(function(b2, c3) {
                var w2 = { series: m3 };
                a3 && (h3 = T(l, x, c3));
                l.pointClass.prototype.applyOptions.apply(w2, [b2]);
                var r = w2.x;
                L(d[r]) && d[r].seriesIndices.includes(m3.index) && (b2 = Object.keys(d).filter(function(a4) {
                  return d[a4].seriesIndices.includes(m3.index) && r;
                }).filter(function(a4) {
                  return 0 === a4.indexOf(String(r));
                }), r = r.toString() + "," + b2.length);
                b2 = l.data[c3] && l.data[c3].name;
                f3 = 0;
                if (!u || "name" === l.exportKey || !a3 && u && u.hasNames && b2)
                  r = b2;
                k2 && (k2[r] && (r += "|" + c3), k2[r] = true);
                d[r] || (d[r] = [], d[r].xValues = []);
                d[r].x = w2.x;
                d[r].name = b2;
                d[r].xValues[t2] = w2.x;
                L(d[r].seriesIndices) || (d[r].seriesIndices = []);
                for (d[r].seriesIndices = E(E([], d[r].seriesIndices, true), [m3.index], false); f3 < n2; )
                  c3 = x[f3], b2 = w2[c3], d[r][B + f3] = A(h3.categoryMap[c3][b2], h3.dateTimeValueAxisMap[c3] ? g.dateFormat(e.dateFormat, b2) : null, b2), f3++;
              });
              B += f3;
            }
          });
          for (f2 in d)
            Object.hasOwnProperty.call(d, f2) && n.push(d[f2]);
          t = b ? [p3, K] : [K];
          for (B = q2.length; B--; ) {
            var k = q2[B][0];
            var M = q2[B][1];
            var C = c2[k];
            n.sort(function(a4, b2) {
              return a4.xValues[k] - b2.xValues[k];
            });
            var f2 = v2(C);
            t[0].splice(M, 0, f2);
            b && t[1] && t[1].splice(M, 0, f2);
            n.forEach(function(a4) {
              var b2 = a4.name;
              C && !L(b2) && (C.dateTime ? (a4.x instanceof Date && (a4.x = a4.x.getTime()), b2 = g.dateFormat(e.dateFormat, a4.x)) : b2 = C.categories ? A(C.names[a4.x], C.categories[a4.x], a4.x) : a4.x);
              a4.splice(M, 0, b2);
            });
          }
          t = t.concat(n);
          N(this, "exportData", { dataRows: t });
          return t;
        }
        function Q(a3) {
          var b = function(a4) {
            if (!a4.tagName || "#text" === a4.tagName)
              return a4.textContent || "";
            var e = a4.attributes, c2 = "<".concat(a4.tagName);
            e && Object.keys(e).forEach(function(a5) {
              var b2 = e[a5];
              c2 += " ".concat(a5, '="').concat(b2, '"');
            });
            c2 += ">";
            c2 += a4.textContent || "";
            (a4.children || []).forEach(function(a5) {
              c2 += b(a5);
            });
            return c2 += "</".concat(a4.tagName, ">");
          };
          a3 = this.getTableAST(a3);
          return b(a3);
        }
        function ba(a3) {
          var b = 0, c2 = [], e = this.options, f2 = a3 ? 1.1 .toLocaleString()[1] : ".", d = A(e.exporting.useMultiLevelHeaders, true);
          a3 = this.getDataRows(d);
          var n = d ? a3.shift() : null, h2 = a3.shift(), m2 = function(a4, b2, c3, e2) {
            var d2 = A(e2, "");
            b2 = "highcharts-text" + (b2 ? " " + b2 : "");
            "number" === typeof d2 ? (d2 = d2.toString(), "," === f2 && (d2 = d2.replace(".", f2)), b2 = "highcharts-number") : e2 || (b2 = "highcharts-empty");
            c3 = U({ "class": b2 }, c3);
            return { tagName: a4, attributes: c3, textContent: d2 };
          };
          false !== e.exporting.tableCaption && c2.push({ tagName: "caption", attributes: { "class": "highcharts-table-caption" }, textContent: A(e.exporting.tableCaption, e.title.text ? e.title.text : "Chart") });
          for (var t = 0, q2 = a3.length; t < q2; ++t)
            a3[t].length > b && (b = a3[t].length);
          c2.push(function(a4, b2, c3) {
            var u = [], g = 0;
            c3 = c3 || b2 && b2.length;
            var f3 = 0, k;
            if (k = d && a4 && b2) {
              a:
                if (k = a4.length, b2.length === k) {
                  for (; k--; )
                    if (a4[k] !== b2[k]) {
                      k = false;
                      break a;
                    }
                  k = true;
                } else
                  k = false;
              k = !k;
            }
            if (k) {
              for (k = []; g < c3; ++g) {
                var n2 = a4[g];
                var h3 = a4[g + 1];
                n2 === h3 ? ++f3 : f3 ? (k.push(m2("th", "highcharts-table-topheading", { scope: "col", colspan: f3 + 1 }, n2)), f3 = 0) : (n2 === b2[g] ? e.exporting.useRowspanHeaders ? (h3 = 2, delete b2[g]) : (h3 = 1, b2[g] = "") : h3 = 1, n2 = m2("th", "highcharts-table-topheading", { scope: "col" }, n2), 1 < h3 && n2.attributes && (n2.attributes.valign = "top", n2.attributes.rowspan = h3), k.push(n2));
              }
              u.push({ tagName: "tr", children: k });
            }
            if (b2) {
              k = [];
              g = 0;
              for (c3 = b2.length; g < c3; ++g)
                "undefined" !== typeof b2[g] && k.push(m2("th", null, { scope: "col" }, b2[g]));
              u.push({
                tagName: "tr",
                children: k
              });
            }
            return { tagName: "thead", children: u };
          }(n, h2, Math.max(b, h2.length)));
          var p3 = [];
          a3.forEach(function(a4) {
            for (var c3 = [], d2 = 0; d2 < b; d2++)
              c3.push(m2(d2 ? "td" : "th", null, d2 ? {} : { scope: "row" }, a4[d2]));
            p3.push({ tagName: "tr", children: c3 });
          });
          c2.push({ tagName: "tbody", children: p3 });
          c2 = { tree: { tagName: "table", id: "highcharts-data-table-".concat(this.index), children: c2 } };
          N(this, "aftergetTableAST", c2);
          return c2.tree;
        }
        function ca() {
          this.toggleDataTable(false);
        }
        function da(b) {
          var c2 = (b = A(b, !this.isDataTableVisible)) && !this.dataTableDiv;
          c2 && (this.dataTableDiv = ea.createElement("div"), this.dataTableDiv.className = "highcharts-data-table", this.renderTo.parentNode.insertBefore(this.dataTableDiv, this.renderTo.nextSibling));
          if (this.dataTableDiv) {
            var g = this.dataTableDiv.style, e = g.display;
            g.display = b ? "block" : "none";
            b && (this.dataTableDiv.innerHTML = a2.emptyHTML, new a2([this.getTableAST()]).addToDOM(this.dataTableDiv), N(this, "afterViewData", { element: this.dataTableDiv, wasHidden: c2 || e !== g.display }));
          }
          this.isDataTableVisible = b;
          c2 = this.exportDivElements;
          e = (g = this.options.exporting) && g.buttons && g.buttons.contextButton.menuItems;
          b = this.options.lang;
          g && g.menuItemDefinitions && b && b.viewData && b.hideData && e && c2 && (c2 = c2[e.indexOf("viewData")]) && a2.setElementHTML(c2, this.isDataTableVisible ? b.hideData : b.viewData);
        }
        function fa() {
          this.toggleDataTable(true);
        }
        function S(a3, c2) {
          var b = z.navigator, e = -1 < b.userAgent.indexOf("WebKit") && 0 > b.userAgent.indexOf("Chrome"), f2 = z.URL || z.webkitURL || z;
          try {
            if (b.msSaveOrOpenBlob && z.MSBlobBuilder) {
              var d = new z.MSBlobBuilder();
              d.append(a3);
              return d.getBlob("image/svg+xml");
            }
            if (!e)
              return f2.createObjectURL(new z.Blob(["\uFEFF" + a3], { type: c2 }));
          } catch (n) {
          }
        }
        function ha() {
          var a3 = this, c2 = a3.dataTableDiv, g = function(a4, b) {
            return function(c3, d) {
              var e2 = (b ? c3 : d).children[a4].textContent;
              c3 = (b ? d : c3).children[a4].textContent;
              return "" === e2 || "" === c3 || isNaN(e2) || isNaN(c3) ? e2.toString().localeCompare(c3) : e2 - c3;
            };
          };
          if (c2 && a3.options.exporting && a3.options.exporting.allowTableSorting) {
            var e = c2.querySelector("thead tr");
            e && e.childNodes.forEach(function(b) {
              var d = b.closest("table");
              b.addEventListener("click", function() {
                var e2 = E(
                  [],
                  c2.querySelectorAll("tr:not(thead tr)"),
                  true
                ), f2 = E([], b.parentNode.children, true);
                e2.sort(g(f2.indexOf(b), a3.ascendingOrderInTable = !a3.ascendingOrderInTable)).forEach(function(a4) {
                  d.appendChild(a4);
                });
                f2.forEach(function(a4) {
                  ["highcharts-sort-ascending", "highcharts-sort-descending"].forEach(function(b2) {
                    a4.classList.contains(b2) && a4.classList.remove(b2);
                  });
                });
                b.classList.add(a3.ascendingOrderInTable ? "highcharts-sort-ascending" : "highcharts-sort-descending");
              });
            });
          }
        }
        function ia() {
          this.options && this.options.exporting && this.options.exporting.showTable && !this.options.chart.forExport && this.viewData();
        }
        var E = this && this.__spreadArray || function(a3, c2, f2) {
          if (f2 || 2 === arguments.length)
            for (var b = 0, g = c2.length, d; b < g; b++)
              !d && b in c2 || (d || (d = Array.prototype.slice.call(c2, 0, b)), d[b] = c2[b]);
          return a3.concat(d || Array.prototype.slice.call(c2));
        }, ea = c.doc, z = c.win, ja = y.getOptions, O = y.setOptions, R = W.downloadURL, X = P.series;
        c = P.seriesTypes;
        var F = c.arearange, G = c.gantt, H = c.map, I = c.mapbubble, J = c.treemap, V = m.addEvent, L = m.defined, U = m.extend, aa = m.find, N = m.fireEvent, Y = m.isNumber, A = m.pick, h = [];
        "";
        return { compose: function(a3) {
          -1 === h.indexOf(a3) && (h.push(a3), V(a3, "afterViewData", ha), V(a3, "render", ia), a3 = a3.prototype, a3.downloadCSV = f, a3.downloadXLS = v, a3.getCSV = q, a3.getDataRows = D, a3.getTable = Q, a3.getTableAST = ba, a3.hideData = ca, a3.toggleDataTable = da, a3.viewData = fa);
          if (-1 === h.indexOf(O)) {
            h.push(O);
            if (a3 = ja().exporting)
              U(a3.menuItemDefinitions, { downloadCSV: { textKey: "downloadCSV", onclick: function() {
                this.downloadCSV();
              } }, downloadXLS: { textKey: "downloadXLS", onclick: function() {
                this.downloadXLS();
              } }, viewData: { textKey: "viewData", onclick: function() {
                this.toggleDataTable();
              } } }), a3.buttons && a3.buttons.contextButton.menuItems && a3.buttons.contextButton.menuItems.push("separator", "downloadCSV", "downloadXLS", "viewData");
            O(p2);
          }
          F && -1 === h.indexOf(F) && (h.push(F), F.prototype.keyToAxis = { low: "y", high: "y" });
          G && -1 === h.indexOf(G) && (h.push(G), G.prototype.keyToAxis = { start: "x", end: "x" });
          H && -1 === h.indexOf(H) && (h.push(H), H.prototype.exportKey = "name");
          I && -1 === h.indexOf(I) && (h.push(I), I.prototype.exportKey = "name");
          J && -1 === h.indexOf(J) && (h.push(J), J.prototype.exportKey = "name");
        } };
      });
      p(
        a,
        "masters/modules/export-data.src.js",
        [a["Core/Globals.js"], a["Extensions/ExportData/ExportData.js"]],
        function(a2, f) {
          f.compose(a2.Chart);
        }
      );
    });
  }
});

// dep:highcharts_modules_export-data
var highcharts_modules_export_data_default = require_export_data();
export {
  highcharts_modules_export_data_default as default
};
//# sourceMappingURL=highcharts_modules_export-data.js.map
